name: Deploy NGINX DaemonSet via Tailscale

on:
  push:
    branches:
      - 01-firstvm
    paths:
      - "nginx-daemonset.yml"
      - ".github/workflows/deploy-nginx-daemonset.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest   # runner GitHub hébergé

    env:
      MASTER_TS_HOST: "100.114.232.32"        # <- IP/nom Tailscale du master
      MASTER_TS_USER: "devops"                # <- utilisateur SSH sudoer sur le master
      REMOTE_KUBECONFIG: "/etc/kubernetes/admin.conf"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: Install kubectl
        run: |
          curl -sSLo kubectl https://dl.k8s.io/release/$(curl -sSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Write SSH key file
        run: |
          umask 077
          mkdir -p ~/.ssh
          cat > ~/.ssh/id_ci <<'EOF'
          ${{ secrets.SSH_PRIVATE_KEY }}
          EOF
                  chmod 600 ~/.ssh/id_ci

      - name: Fetch kubeconfig from master (via Tailscale)
        run: |
          ssh -vvv -o StrictHostKeyChecking=no -o IdentitiesOnly=yes \
              -i ~/.ssh/id_ci \
              "$MASTER_TS_USER@$MASTER_TS_HOST" \
              "sudo cat $REMOTE_KUBECONFIG" > admin.conf
          mkdir -p ~/.kube
          cp admin.conf ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Apply NGINX DaemonSet
        run: |
          kubectl --kubeconfig ~/.kube/config cluster-info
          kubectl --kubeconfig ~/.kube/config apply -f nginx-daemonset.yml
          kubectl --kubeconfig ~/.kube/config -n default rollout status ds/nginx-all-nodes --timeout=180s || true
          kubectl --kubeconfig ~/.kube/config -n default get ds nginx-all-nodes -o wide
